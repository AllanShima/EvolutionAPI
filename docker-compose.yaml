services:
  mysql:
    image: mysql:8.0  # Troque para imagem oficial (mais estável no Windows)
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: evolution
      MYSQL_USER: evolution_user
      MYSQL_PASSWORD: evolution123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/logs:/var/log/mysql  # Pasta local para logs
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --log-error=/var/log/mysql/error.log
      - --innodb_use_native_aio=0  # Importante para Windows
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 20s
      retries: 10
    networks:
      - evolution-net

  redis:
    image: redis:latest
    container_name: redis
    command: >
      redis-server
      --appendonly yes
      --bind 0.0.0.0
      --protected-mode no
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ping"]  # Adicione a senha
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - evolution-net

  evolution_api:
    environment:
      - CONFIG_SESSION_PHONE_VERSION=${CONFIG_SESSION_PHONE_VERSION}
    container_name: evolution_api
    image: atendai/evolution-api:v2.2.0
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:  # Adicione esta seção
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - evolution-net

  minha_api_node:
    container_name: minha_api_node
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: true
    ports:
      - "3001:3000"
    volumes:
      - ./src/backend:/usr/src/app/src/backend
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=TrayWhatsDB
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - evolution-net  # Corrigido para usar a mesma rede

networks:
  evolution-net:
    driver: bridge

volumes:
  mysql_data:
  redis_data:  # Volume adicionado para o Redis
  evolution_instances:  # Corrigido o nome (estava "evolution_instances" no serviço)