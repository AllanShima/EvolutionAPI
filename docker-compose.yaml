version: '3.9'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: evolution
      # MYSQL_DATABASE_TRAY: TrayWhatsDB (utilize ele pra criar o banco automaticamente)
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - minha_rede

  redis:
    image: redis:6.2-alpine  # Versão mais estável
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --save 60 1 --requirepass evolution123  # Adicione uma senha
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "evolution123", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - minha_rede

  evolution_api:
    container_name: evolution_api
    environment:
      - CORS_ENABLED=true
      - CORS_ORIGIN=*
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=evolution123  # Mesma senha do Redis
      - REDIS_DB=0
      - REDIS_PREFIX_KEY=evolution
      - REDIS_RECONNECT_DELAY=5000  # Tempo entre tentativas
      - REDIS_CONNECTION_TIMEOUT=10000  # 10 segundos
    image: atendai/evolution-api:v2.2.0
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: sh -c "sleep 30 && npx prisma migrate deploy && node dist/main.js"
    networks:
      - minha_rede

  minha_api_node:
    container_name: minha_api_node
    build:
      context: .
      dockerfile: Dockerfile
      no_cache: true  # Ignora cache na construção
    ports:
      - "3001:3000"  # Escolha entre 3000 ou 3001, não ambos
    volumes:
      - ./src/backend:/usr/src/app/src/backend  # Mapeamento correto
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=TrayWhatsDB
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - minha_rede

networks:
  minha_rede:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  evolution_instances:
